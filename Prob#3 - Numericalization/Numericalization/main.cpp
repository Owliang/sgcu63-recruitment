#include <iostream>
#include <vector>

using namespace std;

char num0[5][6] { {'0','0','0','0','0',' '},
                  {'0',' ',' ',' ','0',' '},
                  {'0',' ',' ',' ','0',' '},
                  {'0',' ',' ',' ','0',' '},
                  {'0','0','0','0','0',' '} };
char num1[5][6] { {' ',' ',' ',' ','1',' '},
                  {' ',' ',' ',' ','1',' '},
                  {' ',' ',' ',' ','1',' '},
                  {' ',' ',' ',' ','1',' '},
                  {' ',' ',' ',' ','1',' '} };
char num2[5][6] { {'2','2','2','2','2',' '},
                  {' ',' ',' ',' ','2',' '},
                  {'2','2','2','2','2',' '},
                  {'2',' ',' ',' ',' ',' '},
                  {'2','2','2','2','2',' '} };
char num3[5][6] { {'3','3','3','3','3',' '},
                  {' ',' ',' ',' ','3',' '},
                  {'3','3','3','3','3',' '},
                  {' ',' ',' ',' ','3',' '},
                  {'3','3','3','3','3',' '} };
char num4[5][6] { {'4',' ',' ',' ','4',' '},
                  {'4',' ',' ',' ','4',' '},
                  {'4','4','4','4','4',' '},
                  {' ',' ',' ',' ','4',' '},
                  {' ',' ',' ',' ','4',' '} };
char num5[5][6] { {'5','5','5','5','5',' '},
                  {'5',' ',' ',' ',' ',' '},
                  {'5','5','5','5','5',' '},
                  {' ',' ',' ',' ','5',' '},
                  {'5','5','5','5','5',' '} };
char num6[5][6] { {'6','6','6','6','6',' '},
                  {'6',' ',' ',' ',' ',' '},
                  {'6','6','6','6','6',' '},
                  {'6',' ',' ',' ','6',' '},
                  {'6','6','6','6','6',' '} };
char num7[5][6] { {'7','7','7','7','7',' '},
                  {' ',' ',' ',' ','7',' '},
                  {' ',' ',' ',' ','7',' '},
                  {' ',' ',' ',' ','7',' '},
                  {' ',' ',' ',' ','7',' '} };
char num8[5][6] { {'8','8','8','8','8',' '},
                  {'8',' ',' ',' ','8',' '},
                  {'8','8','8','8','8',' '},
                  {'8',' ',' ',' ','8',' '},
                  {'8','8','8','8','8',' '} };
char num9[5][6] { {'9','9','9','9','9',' '},
                  {'9',' ',' ',' ','9',' '},
                  {'9','9','9','9','9',' '},
                  {' ',' ',' ',' ','9',' '},
                  {'9','9','9','9','9',' '} };
char noNum[5][6] { {' ',' ',' ',' ',' ',' '},
                  {' ',' ',' ',' ',' ',' '},
                  {' ',' ',' ',' ',' ',' '},
                  {' ',' ',' ',' ',' ',' '},
                  {' ',' ',' ',' ',' ',' '} };

char getData(int num, int x, int y) {
    switch(num) {
    case 0:
        return num0[x][y];
    case 1:
        return num1[x][y];
    case 2:
        return num2[x][y];
    case 3:
        return num3[x][y];
    case 4:
        return num4[x][y];
    case 5:
        return num5[x][y];
    case 6:
        return num6[x][y];
    case 7:
        return num7[x][y];
    case 8:
        return num8[x][y];
    case 9:
        return num9[x][y];
    default:
        return noNum[x][y];
    }
}

int main() {
    vector<int> num;
    int N, M1, M2;
    cin >> N >> M1 >> M2;

    //push every digit into vector in reverse order.
    while (N / 10 > 0) {
        num.push_back(N % 10);
        N /= 10;
    }
    num.push_back(N);

    //print number expanded horizontally by M2 and vertically by M1
    for (int k = 0; k < 5 * M1; k++) {
        for (int i = num.size() - 1; i >= 0; i--) {
            for (int j = 0; j < 6 * M2; j++) {
                cout << getData(num[i], k / M1, j / M2);
            }
        }
        cout << "\n";
    }
    return 0;
}
